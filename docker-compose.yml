services:
  redis:
    image: redis/redis-stack:latest
    container_name: semantic-cache-redis
    ports:
      - "6379:6379"
      - "8001:8001"
    environment:
      - REDIS_ARGS=--save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - semantic-cache-network

  prometheus:
    image: prom/prometheus:latest
    container_name: semantic-cache-prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - semantic-cache-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: semantic-cache-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - semantic-cache-network
    depends_on:
      - prometheus
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: semantic-cache-app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PROMETHEUS_PORT=8000
      - GROQ_API_KEY=${GROQ_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - prometheus
    networks:
      - semantic-cache-network
    restart: unless-stopped

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  semantic-cache-network:
    driver: bridge
